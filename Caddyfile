# global options
{
	admin off
	persist_config off
	auto_https off

	log {
		format json
	}

	servers {
		# trust Railway's proxy and private ranges
		trusted_proxies static private_ranges 100.0.0.0/8
	}
}

# site block (Railway sets $PORT)
:{$PORT} {
	encode zstd gzip

	# access logs
	log {
		format json
	}

	# --- API, auth, uploads, websockets -> API service ---
	handle_path /api/* {
		reverse_proxy {$API_ENDPOINT} {
			# make Django/Plane see the real public host & https
			header_up Host {http.request.host}
			header_up X-Forwarded-Host {http.request.host}
			header_up X-Forwarded-Proto {http.request.scheme}
			header_up X-Forwarded-Port 443
			header_up X-Real-IP {remote}
		}
	}

	handle_path /auth/* {
		reverse_proxy {$API_ENDPOINT} {
			header_up Host {http.request.host}
			header_up X-Forwarded-Host {http.request.host}
			header_up X-Forwarded-Proto {http.request.scheme}
			header_up X-Forwarded-Port 443
			header_up X-Real-IP {remote}
		}
	}

	# Plane uses /spaces for uploads; keep it as a separate upstream if you have MinIO
	handle_path /spaces/* {
		reverse_proxy {$SPACES_ENDPOINT} {
			# for object storage, upstream Host is fine
			header_up Host {upstream_hostport}
		}
	}

	# If your build uses socket.io for realtime:
	handle_path /socket.io/* {
		reverse_proxy {$API_ENDPOINT} {
			header_up Host {http.request.host}
			header_up X-Forwarded-Host {http.request.host}
			header_up X-Forwarded-Proto {http.request.scheme}
			header_up X-Forwarded-Port 443
			header_up X-Real-IP {remote}
		}
	}

	# Plane admin UI
	handle_path /god-mode/* {
		reverse_proxy {$ADMIN_ENDPOINT} {
			header_up Host {http.request.host}
			header_up X-Forwarded-Proto {http.request.scheme}
			header_up X-Forwarded-Port 443
			header_up X-Real-IP {remote}
		}
	}

	# Optional: direct bucket access (keep upstream host)
	handle_path /{$BUCKET_NAME}/* {
		reverse_proxy {$BUCKET_ENDPOINT} {
			header_up Host {upstream_hostport}
		}
	}

	# --- everything else -> Web (Next.js) ---
	handle {
		reverse_proxy {$WEB_ENDPOINT} {
			# usually safe to keep original host for the web app too
			header_up Host {http.request.host}
			header_up X-Forwarded-Proto {http.request.scheme}
			header_up X-Forwarded-Port 443
			header_up X-Real-IP {remote}
		}
	}
}
